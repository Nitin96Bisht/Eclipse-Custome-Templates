<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="Create Singleton Class" enabled="true" name="singleton">/**&#13;
 * static Singleton instance.&#13;
 */&#13;
private static volatile ${enclosing_type} instance;&#13;
&#13;
/**&#13;
 * Private constructor for singleton.&#13;
 */&#13;
private ${enclosing_type}() {&#13;
}&#13;
&#13;
/**&#13;
 * Return a singleton instance of ${enclosing_type}.&#13;
 */&#13;
public static ${enclosing_type} getInstance() {&#13;
    // Double lock for thread safety.&#13;
    if (instance == null) {&#13;
        synchronized(${enclosing_type}.class){&#13;
            if (instance == null) {&#13;
                instance = new ${enclosing_type}();&#13;
            }&#13;
        }&#13;
    }&#13;
    return instance;&#13;
}</template></templates>